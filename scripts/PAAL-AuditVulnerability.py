import csv
import os
from datetime import date

# Get today's date
today = date.today().strftime("%m-%d-%Y")

# Define the file paths
directory = os.path.expanduser(f"~/Desktop/PAAL/PAAL in Progress/{today} - Audit/")
os.makedirs(directory, exist_ok=True)
audit_file = os.path.join(directory, "Audit.csv")
reference_file = os.path.expanduser(f"~/Desktop/PAAL/PAAL in Progress/SentinelOne Applications/SentinelOne Applications - Modified - {today}.csv")
vulnerability_audit_file = os.path.join(directory, "VulnerabilityAudit.csv")

# Read the Audit.csv file and clone the "Endpoint Name" column
with open(audit_file, 'r') as file:
    reader = csv.DictReader(file)
    endpoint_names = [row["Endpoint Name"] for row in reader]

# Create the VulnerabilityAudit.csv file with the required columns
with open(vulnerability_audit_file, 'w', newline='') as file:
    fieldnames = ["Endpoint Name", "Vulnerability Audit", "Amount of Vulnerable Applications",
                  "Days Since Application Vulnerability Detection", "Days Since Last Successful S1 Scan",
                  "Vulnerable Applications"]
    writer = csv.DictWriter(file, fieldnames=fieldnames)
    writer.writeheader()

    # Fill the "Endpoint Name" and "Vulnerability Audit" columns
    for endpoint_name in endpoint_names:
        writer.writerow({"Endpoint Name": endpoint_name, "Vulnerability Audit": "████",
                         "Amount of Vulnerable Applications": "", "Days Since Application Vulnerability Detection": "",
                         "Days Since Last Successful S1 Scan": "", "Vulnerable Applications": ""})

# Read the reference file and get the column names
with open(reference_file, 'r') as file:
    reader = csv.DictReader(file)
    reference_data = list(reader)

# Update the VulnerabilityAudit.csv file with data from the reference file
with open(vulnerability_audit_file, 'r+') as file:
    reader = csv.DictReader(file)
    rows = list(reader)

    for i, row in enumerate(rows):
        endpoint_name = row["Endpoint Name"]
        matched_rows = [ref_row for ref_row in reference_data if ref_row["Endpoint Name"] == endpoint_name]

        if matched_rows:
            matched_row = matched_rows[0]  # Use the first matching row
            for column in fieldnames:
                if column != "Endpoint Name" and column in matched_row:
                    rows[i][column] = matched_row[column]

    # Move the file pointer to the beginning and overwrite the file
    file.seek(0)
    writer = csv.DictWriter(file, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(rows)
    file.truncate()

print("VulnerabilityAudit.csv was created successfully!")
